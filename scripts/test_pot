def get_conditional_x(lbc, rbc, kernel, padding='VALID'):
    imgl = tf.nn.conv2d(input=lbc, filters=kernel, strides=1, padding=padding)
    imgr = tf.nn.conv2d(input=rbc, filters=kernel, strides=1, padding=padding)
    return tf.reshape(tf.concat([imgl, imgr], -1), imgl.shape.as_list()[:-1] + [1, 1, 1, -1])


# batch = next(iter(ds))
x = get_conditional_x(batch[0], batch[1], FILTER)
crf.potential.xpath(get_conditional_x(batch[0], batch[1], kernel=FILTER))
y = tf.reshape(batch[-1], batch[-1].shape.as_list() + [1, 1])
y = tf.random.uniform(shape=y.shape, minval=0.25, maxval=63.75, dtype=y.dtype)
ye = tf.stack([tf.tile(y, [1, 1, 1, 2, 1, 1]), tf.concat([tf.roll(y, -1, 1), tf.roll(y, -1, 2)], 3)], -1)
fn, fe = crf.potential(inputs=[y, ye], back_prop=False)
